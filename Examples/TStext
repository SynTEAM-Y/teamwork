Fixed map -> { 
    State(id=5, L=[a]/[rD, rF], LS=[d, f])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])], 
        [ State(id=5, L=[]/[], LS=[d, f])], 
        [State(id=8, L=[]/[rP], LS=[d])]],  
        
    State(id=0, L=[]/[], LS=[a])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])], 
        [ State(id=5, L=[]/[], LS=[d, f])], 
        [ State(id=8, L=[]/[rP], LS=[d])]],  
        
    State(id=9, L=[d]/[], LS=[p])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=8, L=[]/[rP], LS=[d])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=5, L=[]/[], LS=[d, f]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])]], 
        
    State(id=2, L=[f]/[], LS=[p])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=8, L=[]/[rP], LS=[d])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=5, L=[]/[], LS=[d, f]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])]], 
        
    State(id=1, L=[a]/[rF], LS=[f])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])], 
        [ State(id=5, L=[]/[], LS=[d, f])], 
        [ State(id=8, L=[]/[rP], LS=[d])]],  
        
    State(id=3, L=[]/[rD], LS=[a, d])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])], 
        [ State(id=5, L=[]/[], LS=[d, f])], 
        [ State(id=8, L=[]/[rP], LS=[d])]],  
        
    State(id=6, L=[a]/[rF], LS=[f])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])], 
        [ State(id=5, L=[]/[], LS=[d, f])], 
        [ State(id=8, L=[]/[rP], LS=[d])]],  
        
    State(id=4, L=[d]/[], LS=[a])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])], 
        [ State(id=5, L=[]/[], LS=[d, f])], 
        [ State(id=8, L=[]/[rP], LS=[d])]],  
        
    State(id=7, L=[d]/[rF], LS=[f])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])], 
        [ State(id=5, L=[]/[], LS=[d, f])], 
        [ State(id=8, L=[]/[rP], LS=[d])]],  
        
    State(id=8, L=[f]/[rD], LS=[d])=[
        [ State(id=3, L=[p]/[], LS=[a, d])], 
        [ State(id=2, L=[]/[rP], LS=[p]),  State(id=9, L=[]/[rP], LS=[p])], 
        [ State(id=8, L=[]/[rP], LS=[d])], 
        [ State(id=4, L=[]/[], LS=[a]),  State(id=0, L=[]/[], LS=[a]),  State(id=5, L=[]/[], LS=[d, f]),  State(id=1, L=[]/[], LS=[f]),  State(id=6, L=[]/[], LS=[f]),  State(id=7, L=[]/[], LS=[f])]]}
This is the coarsest partition ->