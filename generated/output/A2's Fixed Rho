[
 An e-Cooperative Bisimulation for A2

	0 ->
		[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]
		[ State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])]

	post-> [ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	pre-> [ State(id=2, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=4, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=0, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	1 ->
		[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]
		[ State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])]

	post-> [ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	pre-> [ State(id=2, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=4, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=0, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	2 ->
		[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]
		[ State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])]

	post-> [ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	pre-> [ State(id=2, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=4, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=0, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	3 ->
		[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]
		[ State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])]

	post-> [ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1])]

	pre-> []

	4 ->
		[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]
		[ State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])]

	post-> [ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1])]

	pre-> [ State(id=2, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=4, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=0, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	5 ->
		[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]
		[ State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])]

	post-> [ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])]

	pre-> [ State(id=2, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=4, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=0, L=[]/[], LS=[r2, r3, rs, r0, r1]),  State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[]/[], LS=[r2, rs, r3, r0, r1])]


 === Care of Epsilons === 

	0-> decides for:

		 Itself:  State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]) 

		 Its successors:  

			[ State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])] ,

		 Equivalence classes of Intereset for 0 ->

			[[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]] ,

	1-> decides for:

		 Itself:  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1]) 

		 Its successors:  

			[ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1])] ,

		 Equivalence classes of Intereset for 1 ->

			[[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]] ,

	2-> decides for:

		 Itself:  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]) 

		 Its successors:  

			[ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])] ,

		 Equivalence classes of Intereset for 2 ->

			[[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]] ,

	3-> decides for:

		 Itself:  State(id=3, L=[]/[], LS=[r2, rs, r3, r0, r1]) 

		 Its successors:  

			[ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])] ,

		 Equivalence classes of Intereset for 3 ->

			[[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])], [ State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])]] ,

	4-> decides for:

		 Itself:  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]) 

		 Its successors:  

			[ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1]),  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1])] ,

		 Equivalence classes of Intereset for 4 ->

			[[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]] ,

	5-> decides for:

		 Itself:  State(id=5, L=[r2]/[g2], LS=[r2, rs, r3, r0, r1]) 

		 Its successors:  

			[ State(id=0, L=[rs]/[], LS=[r2, r3, rs, r0, r1]),  State(id=4, L=[r3]/[g3], LS=[r2, r3, rs, r0, r1]),  State(id=2, L=[r0]/[g0], LS=[r2, rs, r3, r0, r1]),  State(id=1, L=[]/[], LS=[r2, rs, r3, r0, r1])] ,

		 Equivalence classes of Intereset for 5 ->

			[[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1])]] ,

		 Quotient states for 1 ->

			1 -:- [1] ,

			 Pre ->[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])] -:- 1 ,

			 Post ->[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])] -:- 1 ,

		 Quotient states for 3 ->

			3 -:- [0, 2, 3, 4, 5] ,

			 Pre ->[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])] -:- 3 ,

			 Post ->[ State(id=1, L=[r1]/[g1], LS=[r2, rs, r3, r0, r1]),  State(id=3, L=[]/[], LS=[r2, r3, rs, r0, r1])] -:- 3 ,


]
